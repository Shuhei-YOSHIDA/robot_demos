<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- more default parameters can be changed here -->
    <arg name="paused" value="true"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="world_name" value="$(find gazebo_demo)/worlds/demo.world"/>
  </include>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find gazebo_demo)/launch/gazebo_simulation2.rviz">
  </node>

  <group ns="kame1">
    <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
    <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
    <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
    <arg name="3d_sensor" value="kinect"/>  <!-- kinect, asus_xtion_pro -->

    <!-- Mobile Robot And Drone -->
    <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
      <arg name="base" value="$(arg base)"/>
      <arg name="stacks" value="$(arg stacks)"/>
      <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
      <arg name="urdf_file" value="$(find xacro)/xacro.py '$(find gazebo_demo)/robots/turtlebot_ground_truth.xacro'"/>
    </include>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="30.0"/>
      <param name="tf_prefix" type="string" value="kame1"/>
    </node>

    <!-- Fake laser -->
    <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
          args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
      <param name="scan_height" value="10"/>
      <param name="output_frame_id" value="~camera_depth_frame"/>
      <param name="range_min" value="0.45"/>
      <remap from="image" to="~camera/depth/image_raw"/>
      <remap from="scan" to="~scan"/>
    </node>

    <!--  smooths inputs from cmd_vel_mux/input/teleop_raw to cmd_vel_mux/input/teleop -->
    <include file="$(find turtlebot_teleop)/launch/includes/velocity_smoother.launch.xml"/>

    <!-- publish state and tf -->
    <node name="world_odom_broadcaster" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /world /kame1/odom 100"/>
    <!--
    <node name="ground_truth_to_tf" pkg="message_to_tf" type="message_to_tf" output="screen">
      <param name="odometry_topic" value="ground_truth/state"/>
      <param name="frame_id" value="/world"/>
      <param name="tf_prefix" value="kame1"/>
    </node>
    -->

    <node pkg="turtlebot_teleop" type="turtlebot_teleop_joy" name="turtlebot_teleop_joystick">
      <param name="scale_angular" value="1.5"/>
      <param name="scale_linear" value="0.5"/>
      <remap from="turtlebot_teleop_joystick/cmd_vel" to="teleop_velocity_smoother/raw_cmd_vel"/>
    </node>

    <node pkg="joy" type="joy_node" name="joystick">
      <param name="~dev" value="/dev/input/js1"/>
    </node>
  </group>

  <group ns="tori1">
    <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch">
      <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/> 
      <arg name="x" value="2"/>
      <arg name="y" value="2"/>
      <arg name="z" value="0.3"/>
      <arg name="tf_prefix" value="tori1"/>
    </include>

    <include file="$(find hector_quadrotor_teleop)/launch/logitech_gamepad.launch">
      <arg name="joy_dev" value="/dev/input/js0"/>
    </include>
  </group>

  <node name="marker_publisher" pkg="gazebo_demo" type="state_marker_publisher.py"/>

</launch>
